#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>

// WiFi credentials
const char* ssid = "Your_SSID";       // Replace with your WiFi name
const char* password = "Your_PASSWORD"; // Replace with your WiFi password

// ThingSpeak API details
const char* server = "http://api.thingspeak.com";
String apiKey = "Your_API_KEY";       // Replace with your ThingSpeak API key

// Sensor pins
const int pH_Pin = A0;         // pH sensor connected to analog pin A0
const int TDS_Pin = A1;        // TDS sensor connected to analog pin A1
const int Temp_Pin = A2;       // Temperature sensor connected to analog pin A2
const int Turbidity_Pin = A3;  // Turbidity sensor connected to analog pin A3
const int WaterLevel_Pin = D1; // Water level sensor connected to digital pin D1

// Variables to store sensor data
float pH, tds, temperature, turbidity;
int waterLevel;

void setup() {
  Serial.begin(115200);

  // Initialize WiFi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected.");
}

void loop() {
  // Read sensor data
  pH = analogRead(pH_Pin) * (14.0 / 1023.0);        // Example calculation for pH
  tds = analogRead(TDS_Pin) * (1000.0 / 1023.0);    // Example calculation for TDS
  temperature = analogRead(Temp_Pin) * (50.0 / 1023.0); // Example calculation for temperature in Â°C
  turbidity = analogRead(Turbidity_Pin) * (100.0 / 1023.0); // Example calculation for turbidity
  waterLevel = digitalRead(WaterLevel_Pin);         // 1 for high, 0 for low

  Serial.println("Sensor Data:");
  Serial.println("pH: " + String(pH));
  Serial.println("TDS: " + String(tds));
  Serial.println("Temperature: " + String(temperature));
  Serial.println("Turbidity: " + String(turbidity));
  Serial.println("Water Level: " + String(waterLevel));

  // Send data to ThingSpeak
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    String url = String(server) + "/update?api_key=" + apiKey +
                 "&field1=" + String(pH) +
                 "&field2=" + String(tds) +
                 "&field3=" + String(temperature) +
                 "&field4=" + String(turbidity) +
                 "&field5=" + String(waterLevel);

    http.begin(url);
    int httpCode = http.GET();

    if (httpCode > 0) {
      Serial.println("Data sent to ThingSpeak. Response: " + String(httpCode));
    } else {
      Serial.println("Error sending data. HTTP code: " + String(httpCode));
    }
    http.end();
  } else {
    Serial.println("WiFi not connected.");
  }

  delay(15000); // Wait 15 seconds before sending the next data
}